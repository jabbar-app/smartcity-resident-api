services:
  # Layanan Resident
  resident-api:
    build:
      context: .
      dockerfile: ./services/resident/Dockerfile
    ports:
      - "3001:3001"
    environment:
      DATABASE_URL: "postgresql://user:password@db:5432/smartcity?schema=public"
    depends_on:
      db:
        condition: service_healthy
    # Use default logging - Promtail will collect these
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=resident-api"

  # Layanan Report
  report-api:
    build:
      context: .
      dockerfile: ./services/report/Dockerfile
    ports:
      - "3002:3002"
    environment:
      DATABASE_URL: "postgresql://user:password@db:5432/smartcity?schema=public"
    depends_on:
      db:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=report-api"

  # Layanan Alert
  alert-api:
    build:
      context: .
      dockerfile: ./services/alert/Dockerfile
    ports:
      - "3003:3003"
    environment:
      DATABASE_URL: "postgresql://user:password@db:5432/smartcity?schema=public"
    depends_on:
      db:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=alert-api"

  # Database PostgreSQL dengan Healthcheck
  db:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: smartcity
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d smartcity"]
      interval: 5s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=database"

  # --- Monitoring Stack ---
  loki:
    image: grafana/loki:2.9.0
    ports:
      - "3100:3100"
    volumes:
      - ./config/loki-config.yaml:/etc/loki/config.yaml
      - loki_data:/loki
    command: -config.file=/etc/loki/config.yaml
    user: "10001"

  # Promtail to collect Docker logs
  promtail:
    image: grafana/promtail:2.9.0
    volumes:
      - ./config/promtail-config.yaml:/etc/promtail/config.yaml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - loki
    logging:
      driver: "json-file"
      options:
        max-size: "5m"

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - loki
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=grafana"

volumes:
  postgres_data:
  loki_data:
  grafana_data: